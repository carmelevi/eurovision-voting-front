{"version":3,"sources":["components/MainPage.js","components/shared/AppButton.js","components/shared/Drawer.js","components/shared/AppSnackbar.js","components/shared/AppSelect.js","components/shared/AppCard.js","components/voting/CountryVote.js","components/voting/WaitForVoting.js","components/voting/VotingPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","page","Box","id","display","m","useStyles","makeStyles","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","AppButton","handleSubmit","buttonName","classes","aligncontent","Button","className","variant","onClick","drawerWidth","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","title","buttons","PersistentDrawerLeft","openRoutesFuncs","routes","routesIcons","sectionName","pagesNames","openPage","useTheme","useState","open","setOpen","handleDrawerClose","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Menu","Typography","map","pageName","name","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Alert","props","elevation","marginTop","AppSnackbar","message","severity","setNotify","handleClose","event","reason","Snackbar","autoHideDuration","onClose","AppSelect","score","setScore","FormControl","fullWidth","InputLabel","Select","labelId","value","onChange","target","MenuItem","maxWidth","margin","backgroundColor","align","AppCard","children","Card","CountryVote","countryName","songName","imageUrl","popUpNotification","setVotingStatus","loading","setLoading","mediaStyles","useWideCardMediaStyles","a","preventDefault","error","Container","CardMedia","image","CircularProgress","WaitForVoting","size","votingStatuses","VotingPage","votingStatus","setPage","useEffect","console","log","setTimeout","HowToVote","votingPagesNames","App","notify","setMessage","setSeverity","setSectionName","setPagesNames","routePages","vote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88657c77.chunk.js","sourcesContent":["import { Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst MainPage = ({ page }) => {\n  return (\n    <Box id=\"main_page\" display=\"block\" m={0}>\n      {page}\n    </Box>\n  );\n};\n\nMainPage.propTypes = {\n  page: PropTypes.element,\n};\n\nexport default MainPage;\n","import { Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\n// We can inject some CSS into the DOM.\nconst useStyles = makeStyles({\n  root: {\n    background: \"linear-gradient(45deg, #F7DC25 30%, #F9F959 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"black\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(206, 206, 19, .4)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n});\n\nconst AppButton = ({ handleSubmit, buttonName }) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <Button\n        className={classes.root}\n        variant=\"outlined\"\n        onClick={handleSubmit}\n      >\n        {buttonName}\n      </Button>\n    </Box>\n  );\n};\n\nAppButton.propTypes = {\n  handleSubmit: PropTypes.func,\n  buttonName: PropTypes.string,\n};\n\nexport default AppButton;\n","import { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  AppBar,\n  Box,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ChevronLeft, ChevronRight, Menu } from '@material-ui/icons';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport AppButton from './AppButton';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    background: '#5900b3',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  buttons: { display: 'flex', aligncontent: 'center', m: '1' },\n}));\n\nexport default function PersistentDrawerLeft({\n  openRoutesFuncs,\n  routes,\n  routesIcons,\n  sectionName,\n  pagesNames,\n  openPage,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {sectionName}\n          </Typography>\n          <Box className={classes.buttons}>\n            {pagesNames.map((pageName) => (\n              <AppButton\n                key={pageName}\n                handleSubmit={() => openPage({ name: pageName })}\n                buttonName={pageName}\n              ></AppButton>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {routes.map((text, index) => (\n            <ListItem\n              button\n              key={text}\n              onClick={() => {\n                handleDrawerClose();\n                openRoutesFuncs[index]();\n              }}\n            >\n              <ListItemIcon>{routesIcons[index]}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n\nPersistentDrawerLeft.propTypes = {\n  openRoutesFuncs: PropTypes.array,\n  routes: PropTypes.array,\n  routesIcons: PropTypes.array,\n  pagesNames: PropTypes.array,\n  sectionName: PropTypes.string,\n  openPage: PropTypes.func,\n};\n","import MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AppSnackbar({ message, severity, setNotify }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setNotify(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nAppSnackbar.propTypes = {\n  message: PropTypes.string,\n  severity: PropTypes.string,\n  setNotify: PropTypes.func,\n};\n","import { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst AppSelect = ({ score, setScore }) => {\n  return (\n    <FormControl fullWidth>\n      <InputLabel id=\"demo-simple-select-label\">Score</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={score}\n        label=\"Score\"\n        onChange={(event) => setScore(event.target.value)}\n      >\n        <MenuItem value={'1'}>1</MenuItem>\n        <MenuItem value={'2'}>2</MenuItem>\n        <MenuItem value={'3'}>3</MenuItem>\n        <MenuItem value={'4'}>4</MenuItem>\n        <MenuItem value={'5'}>5</MenuItem>\n        <MenuItem value={'6'}>6</MenuItem>\n        <MenuItem value={'7'}>7</MenuItem>\n        <MenuItem value={'8'}>8</MenuItem>\n        <MenuItem value={'10'}>10</MenuItem>\n        <MenuItem value={'12'}>DOUZE PUA</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nAppSelect.propTypes = {\n  setScore: PropTypes.func,\n  score: PropTypes.string,\n};\n\nexport default AppSelect;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Card } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 304,\n    margin: 'auto',\n    boxShadow: 'none',\n    padding: 24,\n    borderRadius: 20,\n    marginTop: 24,\n    backgroundColor: '#d9b3ff',\n    align: 'center',\n  },\n}));\n\nexport default function AppCard({ children }) {\n  const classes = useStyles();\n\n  return <Card className={classes.root}>{children}</Card>;\n}\n\nAppCard.propTypes = {\n  verified: PropTypes.bool,\n  children: PropTypes.any,\n};\n","import { Box, Container, CircularProgress, CardMedia } from '@material-ui/core';\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppSelect from '../shared/AppSelect';\nimport AppButton from '../shared/AppButton';\nimport AppCard from '../shared/AppCard';\n\n// import { submitScore } from '../../utils/routeHandlers';\n\nconst CountryVote = ({\n  countryName,\n  songName,\n  imageUrl,\n  popUpNotification,\n  setVotingStatus,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState('1');\n  const mediaStyles = useWideCardMediaStyles();\n\n  async function handleSubmitScore(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      // const res = await submitScore({\n      //   score,\n      // });\n      popUpNotification({\n        message: 'Successfully submit score',\n        severity: 'success',\n      });\n      setVotingStatus('wait');\n    } catch (error) {\n      popUpNotification({ message: error.message, severity: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Container>\n      <AppCard>\n        <Box>\n          <CardMedia classes={mediaStyles} image={imageUrl} />\n          <h1>{countryName}</h1>\n          <h3>{songName}</h3>\n          <Box display=\"flex\" aligncontent=\"center\" m={1}>\n            <AppSelect score={score} setScore={setScore} />\n          </Box>\n        </Box>\n        <Box display=\"flex\" aligncontent=\"center\" m={1}>\n          <AppButton handleSubmit={handleSubmitScore} buttonName=\"Submit\" />\n          {loading && <CircularProgress />}\n        </Box>\n      </AppCard>\n    </Container>\n  );\n};\n\nCountryVote.propTypes = {\n  countryName: PropTypes.string,\n  songName: PropTypes.string,\n  imageUrl: PropTypes.string,\n  popUpNotification: PropTypes.func,\n  setVotingStatus: PropTypes.func,\n};\n\nexport default CountryVote;\n","import { Box, Container, CircularProgress } from '@material-ui/core';\n\nconst WaitForVoting = () => {\n  return (\n    <Container>\n      <Box m={1}>\n        <h1>Please wait for the next voting session</h1>\n      </Box>\n      <Box m={1}>\n        <CircularProgress size=\"10rem\" />\n      </Box>\n    </Container>\n  );\n};\n\nexport default WaitForVoting;\n","import { Box } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CountryVote from './CountryVote';\nimport WaitForVoting from './WaitForVoting';\n\n// import { getCountryDetails } from '../../utils/routeHandlers';\n\nconst votingStatuses = { WAIT: 'wait', VOTE: 'vote', DONE: 'done' };\n\nconst VotingPage = ({ popUpNotification }) => {\n  const [votingStatus, setVotingStatus] = useState('wait');\n  const [page, setPage] = useState(null);\n\n  useEffect(() => {\n    console.log(votingStatus);\n    switch (votingStatus) {\n      case votingStatuses.VOTE:\n        // const { countryName, songName, imageUrl } = getCountryDetails();\n        setPage(\n          <CountryVote\n            countryName=\"Israel\"\n            songName=\"I.M\"\n            imageUrl=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Flag_of_Israel.svg/2560px-Flag_of_Israel.svg.png\"\n            popUpNotification={popUpNotification}\n            setVotingStatus={setVotingStatus}\n          />\n        );\n        break;\n      case votingStatuses.DONE:\n        setPage(<h1>done</h1>);\n        break;\n      case votingStatuses.WAIT:\n        setTimeout(() => {\n          setVotingStatus('vote');\n        }, 5000);\n        setPage(<WaitForVoting />);\n        break;\n      default:\n        popUpNotification({\n          message: `Wrong status (${votingStatus})`,\n          severity: 'error',\n        });\n        break;\n    }\n  }, [votingStatus, popUpNotification]);\n\n  return <Box m={0}>{page}</Box>;\n};\n\nVotingPage.propTypes = { popUpNotification: PropTypes.func };\n\nexport default VotingPage;\n","import MainPage from './components/MainPage';\nimport { Box } from '@material-ui/core';\nimport { HowToVote } from '@material-ui/icons';\nimport { useState } from 'react';\n\nimport Drawer from './components/shared/Drawer';\nimport AppSnackbar from './components/shared/AppSnackbar';\nimport VotingPage from './components/voting/VotingPage';\n\nconst routes = ['Voting'];\nconst routesIcons = [<HowToVote key=\"vote-icon\" />];\nconst votingPagesNames = ['vote'];\n\nexport default function App() {\n  const [notify, setNotify] = useState(false);\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const [sectionName, setSectionName] = useState('Voting');\n  const [pagesNames, setPagesNames] = useState(votingPagesNames);\n  const [page, setPage] = useState(null);\n\n  const popUpNotification = ({ message, severity }) => {\n    setMessage(message);\n    setSeverity(severity);\n    setNotify(true);\n  };\n\n  const routePages = {\n    vote: <VotingPage popUpNotification={popUpNotification} />,\n  };\n\n  const openVotingRoutes = () => {\n    setSectionName('Voting');\n    setPagesNames(votingPagesNames);\n  };\n\n  const openPage = ({ name }) => {\n    setPage(routePages[name]);\n  };\n\n  const openRoutesFuncs = [openVotingRoutes];\n\n  return (\n    <Box>\n      <Box>\n        <Drawer\n          routes={routes}\n          routesIcons={routesIcons}\n          openRoutesFuncs={openRoutesFuncs}\n          sectionName={sectionName}\n          pagesNames={pagesNames}\n          openPage={openPage}\n          routePages={routePages}\n        />\n      </Box>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MainPage page={page} />\n      {notify && (\n        <AppSnackbar\n          message={message}\n          severity={severity}\n          setNotify={setNotify}\n        />\n      )}\n    </Box>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}