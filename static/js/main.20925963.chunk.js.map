{"version":3,"sources":["components/MainPage.js","components/shared/Drawer.js","components/shared/AppSnackbar.js","components/shared/AppSelect.js","components/shared/AppListItem.js","components/shared/AppList.js","components/shared/AppButton.js","components/shared/AppTextField.js","utils/routeHandlers.js","components/voting/FinalVoting.js","components/shared/AppTable.js","components/voting/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","page","Box","id","display","m","drawerWidth","useStyles","makeStyles","theme","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","background","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","title","buttons","aligncontent","PersistentDrawerLeft","pages","setPage","popUpNotification","classes","useTheme","useState","open","setOpen","handleDrawerClose","className","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Typography","variant","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","map","ListItem","button","ListItemIcon","icon","ListItemText","primary","label","key","Alert","props","elevation","marginTop","AppSnackbar","message","severity","setNotify","handleClose","event","reason","Snackbar","autoHideDuration","onClose","AppSelect","selectKey","addFinalScore","score","setScore","FormControl","fullWidth","style","minWidth","InputLabel","Select","labelId","value","onChange","addScoreToFinalScores","target","MenuItem","AppListItem","item","ListItemAvatar","Avatar","src","flag","country","secondary","sx","component","song","AppList","items","maxWidth","bgcolor","index","borderRadius","border","height","boxShadow","textTransform","AppButton","handleSubmit","buttonName","Button","backgroundColor","AppTextField","setValue","type","TextField","songsUrl","httpRequestBuilder","a","url","method","headers","body","fetch","JSON","stringify","res","ok","Error","text","sendScores","scores","name","getSongs","response","json","getScores","validateScore","scoresCount","Object","values","reduce","acc","1","2","3","4","5","6","7","8","10","12","every","scoreCount","FinalVoting","userName","setUserName","setScores","useQuery","data","isLoading","isSuccess","isError","error","tempScores","Container","CircularProgress","table","firstPlace","secondPlace","thirdPlace","AppTable","rows","columns","getRowStyle","TableContainer","Paper","Table","TableHead","TableRow","TableCell","column","TableBody","row","scope","AdminPage","setRows","refetchInterval","oldScores","newScores","_","isEqual","isScoresChanged","flexDirection","queryClient","QueryClient","HowToVote","Star","App","notify","setMessage","setSeverity","useEffect","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAeeA,EAZE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,cAACC,EAAA,EAAD,CAAKC,GAAG,YAAYC,QAAQ,QAAQC,EAAG,EAAvC,SACGJ,K,8KCaDK,EAAc,IAEdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJN,QAAS,QAEXO,OAAQ,CACNC,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,gBAEvCC,WACE,yGAEJC,YAAa,CACXC,MAAM,eAAD,OAAiBf,EAAjB,OACLgB,WAAYhB,EACZM,WAAYH,EAAMI,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQN,EAAMI,YAAYE,OAAOQ,QACjCN,SAAUR,EAAMI,YAAYI,SAASO,kBAGzCC,WAAY,CACVC,YAAajB,EAAMkB,QAAQ,IAE7BC,KAAM,CACJxB,QAAS,QAEXyB,OAAQ,CACNR,MAAOf,EACPwB,WAAY,GAEdC,YAAa,CACXV,MAAOf,GAET0B,aAAa,yBACX5B,QAAS,OACT6B,WAAY,SACZC,QAASzB,EAAMkB,QAAQ,EAAG,IAEvBlB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASzB,EAAMkB,QAAQ,GACvBf,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOC,MACjCC,SAAUR,EAAMI,YAAYI,SAASC,gBAEvCI,YAAY,KAEdkB,aAAc,CACZ5B,WAAYH,EAAMI,YAAYC,OAAO,SAAU,CAC7CC,OAAQN,EAAMI,YAAYE,OAAOQ,QACjCN,SAAUR,EAAMI,YAAYI,SAASO,iBAEvCF,WAAY,GAEdmB,MAAO,CACLF,SAAU,GAEZG,QAAS,CAAEtC,QAAS,OAAQuC,aAAc,SAAUtC,EAAG,SAG1C,SAASuC,EAAT,GAIX,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,QACAC,EACC,EADDA,kBAEMC,EAAUzC,IACVE,EAAQwC,cACd,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAoB,WACxBD,GAAQ,IAGV,OACE,eAAClD,EAAA,EAAD,CAAKoD,UAAWN,EAAQtC,KAAxB,UACE,cAAC6C,EAAA,EAAD,CACEC,SAAS,QACTF,UAAWG,YAAKT,EAAQrC,OAAT,eACZqC,EAAQ5B,YAAc+B,IAH3B,SAME,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QApBe,WACvBV,GAAQ,IAoBAW,KAAK,QACLT,UAAWG,YAAKT,EAAQvB,WAAY0B,GAAQH,EAAQpB,MALtD,SAOE,cAACoC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKZ,UAAWN,EAAQP,MAA5C,SACG,qBAIP,eAAC0B,EAAA,EAAD,CACEb,UAAWN,EAAQnB,OACnBqC,QAAQ,aACRE,OAAO,OACPjB,KAAMA,EACNH,QAAS,CACPqB,MAAOrB,EAAQjB,aANnB,UASE,qBAAKuB,UAAWN,EAAQhB,aAAxB,SACE,cAAC2B,EAAA,EAAD,CAAYG,QAAST,EAArB,SACuB,QAApB5C,EAAM6D,UAAsB,cAACC,EAAA,EAAD,IAAkB,cAACC,EAAA,EAAD,QAGnD,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACG7B,EAAM8B,KAAI,SAAC1E,GAAD,OACT,eAAC2E,EAAA,EAAD,CACEC,QAAM,EAENf,QAAS,WACPT,IACAP,EAAQ,cAAC7C,EAAKA,KAAN,CAAW8C,kBAAmBA,MAL1C,UAQE,cAAC+B,EAAA,EAAD,UAAe7E,EAAK8E,OACpB,cAACC,EAAA,EAAD,CAAcC,QAAShF,EAAKiF,UAPvBjF,EAAKkF,gB,sBCzIxB,SAASC,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGpB,QAAQ,UAAamB,IAGtD,IAAM9E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJW,MAAO,OACP,YAAa,CACXkE,UAAW9E,EAAMkB,QAAQ,SAKhB,SAAS6D,EAAT,GAAwD,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACjD3C,EAAUzC,IAChB,EAAwB2C,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMwC,EAAc,SAACC,EAAOC,GACX,cAAXA,IAIJ1C,GAAQ,GACRuC,GAAU,KAGZ,OACE,qBAAKrC,UAAWN,EAAQtC,KAAxB,SACE,cAACqF,EAAA,EAAD,CAAU5C,KAAMA,EAAM6C,iBAAkB,IAAMC,QAASL,EAAvD,SACE,cAAC,EAAD,CAAOK,QAASL,EAAaF,SAAUA,EAAvC,SACGD,Q,qGCSIS,EAzCG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC9B,EAA0BlD,mBAAS,IAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KAOA,OACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAACC,MAAO,CAAEC,SAAU,SAA1C,UACE,cAACC,EAAA,EAAD,CAAYxG,GAAG,2BAAf,mBACA,eAACyG,EAAA,EAAD,CACEC,QAAQ,2BACR1G,GAAG,qBACH2G,MAAOT,EACPnB,MAAM,QACN6B,SAAU,SAAClB,GAAD,OAbc,SAAC,GAAe,IAAbiB,EAAY,EAAZA,MAC/BR,EAASQ,GACTV,EAAc,CAAEjB,IAAKgB,EAAWE,MAAOS,IAYjCE,CAAsB,CAAEF,MAAOjB,EAAMoB,OAAOH,SANhD,UASE,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,eACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,gBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,iCCtBO,SAASK,EAAT,GAA+C,IAAxBC,EAAuB,EAAvBA,KAAMhB,EAAiB,EAAjBA,cAC1C,OACE,eAACxB,EAAA,EAAD,CAAU3C,WAAW,aAArB,UACE,cAACoF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,IAAKH,EAAKI,SAEpB,cAACxC,EAAA,EAAD,CACEC,QAASmC,EAAKK,QACdC,UACE,cAAC,WAAD,UACE,cAACzD,EAAA,EAAD,CACE0D,GAAI,CAAEvH,QAAS,UACfwH,UAAU,OACV1D,QAAQ,QAHV,SAKGkD,EAAKS,WAKd,cAAC3H,EAAA,EAAD,UACE,cAAC,EAAD,CAAWiG,UAAWiB,EAAKjC,IAAKiB,cAAeA,SC7BxC,SAAS0B,EAAT,GAA4C,IAAzBC,EAAwB,EAAxBA,MAAO3B,EAAiB,EAAjBA,cACvC,OACE,cAAC1B,EAAA,EAAD,CAAMiD,GAAI,CAAEtG,MAAO,OAAQ2G,SAAU,IAAKC,QAAS,oBAAnD,SACGF,EAAMpD,KAAI,SAACyC,EAAMc,GAAP,OACT,eAAChI,EAAA,EAAD,WACE,cAACiH,EAAD,CAAaC,KAAMA,EAAMhB,cAAeA,IACxC,cAAC3B,EAAA,EAAD,CAASP,QAAQ,QAAQ0D,UAAU,SAF3BM,Q,aCHZ3H,GAAYC,YAAW,CAC3BE,KAAM,CACJS,WAAY,mDACZgH,aAAc,EACdC,OAAQ,EACRxE,MAAO,QACPyE,OAAQ,GACRnG,QAAS,SACToG,UAAW,wCAEbpD,MAAO,CACLqD,cAAe,gBAyBJC,GArBG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC3B1F,EAAUzC,KAEhB,OACE,cAACL,EAAA,EAAD,CAAKE,QAAQ,OAAOuC,aAAa,SAAStC,EAAG,EAA7C,SACE,cAACsI,EAAA,EAAD,CACErF,UAAWN,EAAQtC,KACnBwD,QAAQ,WACRJ,QAAS2E,EAHX,SAKGC,O,UCzBHnI,GAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJkI,gBAAiB,eAoCNC,GAhCM,SAAC,GAMf,IALL/B,EAKI,EALJA,MACAgC,EAII,EAJJA,SACA5D,EAGI,EAHJA,MAGI,IAFJ6D,YAEI,MAFG,OAEH,MADJ1H,aACI,MADI,IACJ,EACE2B,EAAUzC,KAEhB,OACE,cAACL,EAAA,EAAD,CAAKE,QAAQ,OAAOuC,aAAa,SAAStC,EAAG,EAA7C,SACE,cAAC2I,GAAA,EAAD,CACE1F,UAAWN,EAAQtC,KACnB+F,MAAO,CAAEpF,SACTyF,MAAOA,EACPC,SAAU,SAAClB,GAAD,OAAWiD,EAASjD,EAAMoB,OAAOH,QAC3C5B,MAAOA,EACPhB,QAAQ,WACR6E,KAAMA,OC7BRE,GAAW,wC,SAEFC,G,iFAAf,yCAAAC,EAAA,6DACEC,EADF,EACEA,IADF,IAEEC,cAFF,MAEW,OAFX,MAGEC,eAHF,MAGY,CAAE,eAAgB,oBAH9B,EAIEC,EAJF,EAIEA,KAJF,SAMoBC,MAAMJ,EAAK,CAC3BC,SACAC,UACAC,KAAMA,GAAQE,KAAKC,UAAUH,KATjC,WAMQI,EANR,QAYWC,GAZX,6BAYyBC,MAZzB,SAYqCF,EAAIG,OAZzC,yEAcSH,GAdT,6C,sBAiBO,SAAeI,GAAtB,mC,8CAAO,+BAAAZ,EAAA,yDAA4Ba,EAA5B,EAA4BA,QAAQC,EAApC,EAAoCA,OACnB,KAATA,EADR,sBAEG,IAAIJ,MAAM,yBAFb,uBAKCX,GAAmB,CACvBE,IAAI,GAAD,OAAKH,GAAL,8BAAmCgB,GACtCZ,OAAQ,OACRE,KAAMS,IARH,4C,sBAYA,SAAeE,KAAtB,gC,8CAAO,4BAAAf,EAAA,sEACkBD,GAAmB,CACxCE,IAAI,GAAD,OAAKH,GAAL,4BACHI,OAAQ,QAHL,cACCc,EADD,yBAMEA,EAASC,QANX,4C,sBASA,SAAeC,KAAtB,gC,8CAAO,4BAAAlB,EAAA,sEACkBD,GAAmB,CACxCE,IAAI,GAAD,OAAKH,GAAL,sBACHI,OAAQ,QAHL,cACCc,EADD,yBAMEA,EAASC,QANX,4C,sBC7BP,SAASE,GAAT,GAAoC,IAAXN,EAAU,EAAVA,OACjBO,EAAcC,OAAOC,OAAOT,GAAQU,QACxC,SAACC,EAAKtE,GAEJ,MADc,MAAVA,IAAesE,EAAItE,GAASsE,EAAItE,GAAS,GACtCsE,IAET,CACEC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,IAIR,OAAOb,OAAOC,OAAOF,GAAae,OAAM,SAACC,GAAD,OAA+B,IAAfA,KAG1D,IA8DeC,GA9DK,SAAC,GAA2B,IAAzBzI,EAAwB,EAAxBA,kBACrB,EAAgCG,mBAAS,IAAzC,mBAAOuI,EAAP,KAAiBC,EAAjB,KACA,EAA4BxI,mBAAS,IAArC,mBAAO8G,EAAP,KAAe2B,EAAf,KAEA,EAAuDC,mBACrD,QACA1B,IAFM2B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,QAASC,EAA7C,EAA6CA,MAJA,4CAS7C,sBAAA9C,EAAA,mEAEoBmB,GAAc,CAAEN,WAFpC,gCAIYD,GAAW,CAAEC,SAAQC,KAAMwB,IAJvC,OAKM1I,EAAkB,CAChB0C,QAAS,2BACTC,SAAU,YAPlB,sBAUM3C,EAAkB,CAChB0C,QAAS,wCACTC,SAAU,UAZlB,yDAgBI3C,EAAkB,CAAE0C,QAAS,KAAMA,QAASC,SAAU,UAhB1D,2DAT6C,kEA6B7C,iCAAAyD,EAAA,sDAA+BhE,EAA/B,EAA+BA,IAAKkB,EAApC,EAAoCA,OAC5B6F,EAAalC,GACR7E,GAAOkB,EAClBsF,EAAUO,GAHZ,4CA7B6C,sBA0C7C,OAPIF,GACFjJ,EAAkB,CAChB0C,QAASwG,EAAMxG,SAAW,sBAC1BC,SAAU,UAKZ,cAACyG,EAAA,EAAD,UACE,eAACjM,EAAA,EAAD,WACE,cAAC,GAAD,CAAc4G,MAAO2E,EAAU3C,SAAU4C,EAAaxG,MAAM,SAC3D6G,GAAa,cAACjE,EAAD,CAASC,MAAO8D,EAAMzF,cA9CG,8CA+CtC0F,GAAa,cAACM,EAAA,EAAD,IACd,cAAC,GAAD,CAEE3D,aAlDqC,2CAmDrCC,WAAW,iBAFP,sB,0FCtERnI,GAAYC,YAAW,CAC3B6L,MAAO,CACL3F,SAAU,QAEZ4F,WAAY,CAAE1D,gBAAiB,WAC/B2D,YAAa,CAAE3D,gBAAiB,WAChC4D,WAAY,CAAE5D,gBAAiB,aAwDlB6D,GArDE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClB3J,EAAUzC,KAEVqM,EAAc,SAAC1E,GACnB,OAAQA,GACN,KAAK,EACH,OAAOlF,EAAQsJ,WACjB,KAAK,EACH,OAAOtJ,EAAQuJ,YACjB,KAAK,EACH,OAAOvJ,EAAQwJ,aAMrB,OACE,cAACtM,EAAA,EAAD,CAAKE,QAAQ,OAAOuC,aAAa,SAAStC,EAAG,EAA7C,SACE,cAACwM,GAAA,EAAD,CAAgBjF,UAAWkF,KAA3B,SACE,eAACC,GAAA,EAAD,CAAOzJ,UAAWN,EAAQqJ,MAAOxI,aAAW,eAA5C,UACE,cAACmJ,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,gBACCP,EAAQhI,KAAI,SAACwI,GAAD,OACX,cAACD,GAAA,EAAD,UAA6BC,EAAOjI,OAApBiI,EAAOhI,aAI7B,cAACiI,GAAA,EAAD,UACGV,EAAK/H,KAAI,SAAC0I,EAAKnF,GAAN,OACR,eAAC+E,GAAA,EAAD,CAAU3J,UAAWsJ,EAAY1E,GAAjC,UACE,cAACgF,GAAA,EAAD,CAAWtF,UAAU,KAAK0F,MAAM,MAAhC,SACGpF,EAAQ,IAEVyE,EAAQhI,KAAI,SAACwI,GAAD,OACX,cAACD,GAAA,EAAD,UACGG,EAAIF,EAAOhI,MADd,UAAmBgI,EAAOhI,IAA1B,YAAiC+C,SALSA,gBCzCtDyE,GAAU,CACd,CAAEzH,MAAO,eAAgBC,IAAK,WAC9B,CAAED,MAAO,YAAaC,IAAK,QAC3B,CAAED,MAAO,QAASC,IAAK,UAkDVoI,GA5CG,SAAC,GAA2B,IAAzBxK,EAAwB,EAAxBA,kBACnB,EAAwBG,mBAAS,IAAjC,mBAAOwJ,EAAP,KAAac,EAAb,KACA,EAAgCtK,mBAAS,IAAzC,mBAAOuI,EAAP,KAAiBC,EAAjB,KAEA,EAAuDE,mBACrD,QACAvB,GACA,CAAEoD,gBAAiB,MAHb5B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,QAASC,EAA7C,EAA6CA,MAiB7C,OAXIF,GAbkB,SAAC,GAAD,IAAG2B,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACrBC,KAAEC,QAAQH,EAAWC,GAYLG,CAAgB,CAAEJ,UAAWhB,EAAMiB,UAAW9B,KAC7D2B,EAAQ3B,GAGNG,GACFjJ,EAAkB,CAChB0C,QAASwG,EAAMxG,SAAW,sBAC1BC,SAAU,UAKZ,cAACyG,EAAA,EAAD,UACE,eAACjM,EAAA,EAAD,CACE6N,cAAc,SACd1N,EAAG,EACHD,QAAQ,OACRiC,eAAe,SACfJ,WAAW,SALb,UAOE,cAAC,GAAD,CAAc6E,MAAO2E,EAAU3C,SAAU4C,EAAaxG,MAAM,SAC3D4G,GAAa,cAACM,EAAA,EAAD,IACbL,GAA0B,UAAbN,GACZ,cAAC,GAAD,CAAUiB,KAAMA,EAAMC,QAASA,WC1CnCqB,GAAc,IAAIC,cAClBpL,GAAQ,CACZ,CACEqC,MAAO,gBACPjF,KAAMuL,GACNrG,IAAK,SACLJ,KAAM,cAACmJ,EAAA,EAAD,GAAe,cAEvB,CACEhJ,MAAO,aACPjF,KAAMsN,GACNpI,IAAK,QACLJ,KAAM,cAACoJ,EAAA,EAAD,GAAU,gBAIL,SAASC,KACtB,MAA4BlL,oBAAS,GAArC,mBAAOmL,EAAP,KAAe1I,EAAf,KACA,EAA8BzC,mBAAS,IAAvC,mBAAOuC,EAAP,KAAgB6I,EAAhB,KACA,EAAgCpL,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiB6I,EAAjB,KACA,EAAwBrL,mBAAS,MAAjC,mBAAOjD,EAAP,KAAa6C,EAAb,KAEMC,EAAoB,SAAC,GAA2B,IAAzB0C,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACpC4I,EAAW7I,GACX8I,EAAY7I,GACZC,GAAU,IASZ,OANA6I,qBAAU,WACK,OAATvO,GACF6C,EAAQ,cAAC,GAAD,CAAaC,kBAAmBA,OAEzC,CAAC9C,IAGF,cAAC,sBAAD,CAAqBwO,OAAQT,GAA7B,SACE,eAAC9N,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,UACE,cAAC,EAAD,CACE2C,MAAOA,GACPC,QAASA,EACTC,kBAAmBA,MAGvB,uBACA,uBACA,uBACA,uBACA,cAAC,EAAD,CAAU9C,KAAMA,IACfoO,GACC,cAAC7I,EAAD,CACEC,QAASA,EACTC,SAAUA,EACVC,UAAWA,SChEvB,IAYe+I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAChB,GAAD,IAASiB,SAASC,eAAe,SAKjDZ,O","file":"static/js/main.20925963.chunk.js","sourcesContent":["import { Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst MainPage = ({ page }) => {\n  return (\n    <Box id=\"main_page\" display=\"block\" m={0}>\n      {page}\n    </Box>\n  );\n};\n\nMainPage.propTypes = {\n  page: PropTypes.element,\n};\n\nexport default MainPage;\n","import { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  AppBar,\n  Box,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ChevronLeft, ChevronRight, Menu } from '@material-ui/icons';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    background:\n      'linear-gradient(45deg, #F60707 16%, #F09501 32%, #F7F712 48%, #46B229 65%, #1826E6 81%, #960DDA 100%)',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  buttons: { display: 'flex', aligncontent: 'center', m: '1' },\n}));\n\nexport default function PersistentDrawerLeft({\n  pages,\n  setPage,\n  popUpNotification,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {'STOZOVISION'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {pages.map((page) => (\n            <ListItem\n              button\n              key={page.key}\n              onClick={() => {\n                handleDrawerClose();\n                setPage(<page.page popUpNotification={popUpNotification} />);\n              }}\n            >\n              <ListItemIcon>{page.icon}</ListItemIcon>\n              <ListItemText primary={page.label} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n\nPersistentDrawerLeft.propTypes = {\n  pages: PropTypes.array,\n  setPage: PropTypes.func,\n  popUpNotification: PropTypes.func,\n};\n","import MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AppSnackbar({ message, severity, setNotify }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setNotify(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nAppSnackbar.propTypes = {\n  message: PropTypes.string,\n  severity: PropTypes.string,\n  setNotify: PropTypes.func,\n};\n","import { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst AppSelect = ({ selectKey, addFinalScore }) => {\n  const [score, setScore] = useState('');\n\n  const addScoreToFinalScores = ({ value }) => {\n    setScore(value);\n    addFinalScore({ key: selectKey, score: value });\n  };\n\n  return (\n    <FormControl fullWidth style={{ minWidth: '100px' }}>\n      <InputLabel id=\"demo-simple-select-label\">Score</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={score}\n        label=\"Score\"\n        onChange={(event) =>\n          addScoreToFinalScores({ value: event.target.value })\n        }\n      >\n        <MenuItem value={'0'}>0</MenuItem>\n        <MenuItem value={'1'}>1</MenuItem>\n        <MenuItem value={'2'}>2</MenuItem>\n        <MenuItem value={'3'}>3</MenuItem>\n        <MenuItem value={'4'}>4</MenuItem>\n        <MenuItem value={'5'}>5</MenuItem>\n        <MenuItem value={'6'}>6</MenuItem>\n        <MenuItem value={'7'}>7</MenuItem>\n        <MenuItem value={'8'}>8</MenuItem>\n        <MenuItem value={'10'}>10</MenuItem>\n        <MenuItem value={'12'}>DOUZE POINTS</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nAppSelect.propTypes = {\n  addFinalScore: PropTypes.func,\n  selectKey: PropTypes.string,\n};\n\nexport default AppSelect;\n","import * as React from 'react';\nimport {\n  Avatar,\n  Typography,\n  ListItemAvatar,\n  ListItemText,\n  ListItem,\n  Box,\n} from '@material-ui/core';\nimport AppSelect from './AppSelect';\nimport PropTypes from 'prop-types';\n\nexport default function AppListItem({ item, addFinalScore }) {\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <Avatar src={item.flag} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.country}\n        secondary={\n          <React.Fragment>\n            <Typography\n              sx={{ display: 'inline' }}\n              component=\"span\"\n              variant=\"body2\"\n            >\n              {item.song}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n      <Box>\n        <AppSelect selectKey={item.key} addFinalScore={addFinalScore} />\n      </Box>\n    </ListItem>\n  );\n}\n\nAppListItem.propTypes = {\n  addFinalScore: PropTypes.func,\n  item: PropTypes.object,\n};\n","import { Box, Divider, List } from '@material-ui/core';\nimport AppListItem from './AppListItem';\nimport PropTypes from 'prop-types';\n\nexport default function AppList({ items, addFinalScore }) {\n  return (\n    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      {items.map((item, index) => (\n        <Box key={index}>\n          <AppListItem item={item} addFinalScore={addFinalScore} />\n          <Divider variant=\"inset\" component=\"li\" />\n        </Box>\n      ))}\n    </List>\n  );\n}\n\nAppList.propTypes = {\n  addFinalScore: PropTypes.func,\n  items: PropTypes.array,\n};\n","import { Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\n// We can inject some CSS into the DOM.\nconst useStyles = makeStyles({\n  root: {\n    background: \"linear-gradient(45deg, #F7DC25 30%, #F9F959 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"black\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(206, 206, 19, .4)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n});\n\nconst AppButton = ({ handleSubmit, buttonName }) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <Button\n        className={classes.root}\n        variant=\"outlined\"\n        onClick={handleSubmit}\n      >\n        {buttonName}\n      </Button>\n    </Box>\n  );\n};\n\nAppButton.propTypes = {\n  handleSubmit: PropTypes.func,\n  buttonName: PropTypes.string,\n};\n\nexport default AppButton;\n","import { Box, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#F9F9F9',\n  },\n}));\n\nconst AppTextField = ({\n  value,\n  setValue,\n  label,\n  type = 'text',\n  width = 300,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <TextField\n        className={classes.root}\n        style={{ width }}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        label={label}\n        variant=\"outlined\"\n        type={type}\n      />\n    </Box>\n  );\n};\n\nAppTextField.propTypes = {\n  value: PropTypes.any,\n  setValue: PropTypes.func,\n  label: PropTypes.string,\n  type: PropTypes.string,\n  width: PropTypes.number,\n};\n\nexport default AppTextField;\n","const songsUrl = 'https://3097-77-124-6-115.eu.ngrok.io';\n\nasync function httpRequestBuilder({\n  url,\n  method = 'POST',\n  headers = { 'Content-Type': 'application/json' },\n  body,\n}) {\n  const res = await fetch(url, {\n    method,\n    headers,\n    body: body && JSON.stringify(body),\n  });\n\n  if (!res.ok) throw new Error(await res.text());\n\n  return res;\n}\n\nexport async function sendScores({ scores, name }) {\n  if (!name || name === '') {\n    throw new Error('Name must be provided');\n  }\n\n  await httpRequestBuilder({\n    url: `${songsUrl}/api/v1/eurovision/${name}`,\n    method: 'POST',\n    body: scores,\n  });\n}\n\nexport async function getSongs() {\n  const response = await httpRequestBuilder({\n    url: `${songsUrl}/api/v1/eurovision/songs`,\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\nexport async function getScores() {\n  const response = await httpRequestBuilder({\n    url: `${songsUrl}/api/v1/eurovision`,\n    method: 'GET',\n  });\n\n  return response.json();\n}\n","import { useQuery } from 'react-query';\nimport { Container, CircularProgress, Box } from '@material-ui/core';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppList from '../shared/AppList';\nimport AppButton from '../shared/AppButton';\nimport AppTextField from '../shared/AppTextField';\n\nimport { getSongs, sendScores } from '../../utils/routeHandlers';\n\nfunction validateScore({ scores }) {\n  const scoresCount = Object.values(scores).reduce(\n    (acc, score) => {\n      if (score !== '0') acc[score] = acc[score] + 1;\n      return acc;\n    },\n    {\n      1: 0,\n      2: 0,\n      3: 0,\n      4: 0,\n      5: 0,\n      6: 0,\n      7: 0,\n      8: 0,\n      10: 0,\n      12: 0,\n    }\n  );\n\n  return Object.values(scoresCount).every((scoreCount) => scoreCount === 1);\n}\n\nconst FinalVoting = ({ popUpNotification }) => {\n  const [userName, setUserName] = useState('');\n  const [scores, setScores] = useState({});\n  // const queryClient = useQueryClient();\n  const { data, isLoading, isSuccess, isError, error } = useQuery(\n    'songs',\n    getSongs\n  );\n\n  async function handleSubmitScores() {\n    try {\n      const isValid = validateScore({ scores });\n      if (isValid) {\n        await sendScores({ scores, name: userName });\n        popUpNotification({\n          message: 'Successfully send scores',\n          severity: 'success',\n        });\n      } else {\n        popUpNotification({\n          message: 'Please make sure the scores are valid',\n          severity: 'error',\n        });\n      }\n    } catch (error) {\n      popUpNotification({ message: error.message, severity: 'error' });\n    }\n  }\n\n  async function addFinalScore({ key, score }) {\n    const tempScores = scores;\n    tempScores[key] = score;\n    setScores(tempScores);\n  }\n\n  if (isError) {\n    popUpNotification({\n      message: error.message || 'Failed to get songs',\n      severity: 'error',\n    });\n  }\n\n  return (\n    <Container>\n      <Box>\n        <AppTextField value={userName} setValue={setUserName} label=\"Name\" />\n        {isSuccess && <AppList items={data} addFinalScore={addFinalScore} />}\n        {isLoading && <CircularProgress />}\n        <AppButton\n          key=\"submitScores\"\n          handleSubmit={handleSubmitScores}\n          buttonName=\"Submit Scores\"\n        ></AppButton>\n      </Box>\n    </Container>\n  );\n};\n\nFinalVoting.propTypes = {\n  popUpNotification: PropTypes.func,\n};\n\nexport default FinalVoting;\n","import {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: '40px',\n  },\n  firstPlace: { backgroundColor: '#F6EE07' },\n  secondPlace: { backgroundColor: '#D4D3CA' },\n  thirdPlace: { backgroundColor: '#ECA244' },\n});\n\nconst AppTable = ({ rows, columns }) => {\n  const classes = useStyles();\n\n  const getRowStyle = (index) => {\n    switch (index) {\n      case 0:\n        return classes.firstPlace;\n      case 1:\n        return classes.secondPlace;\n      case 2:\n        return classes.thirdPlace;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              {columns.map((column) => (\n                <TableCell key={column.key}>{column.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow className={getRowStyle(index)} key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((column) => (\n                  <TableCell key={`${column.key}-${index}`}>\n                    {row[column.key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nAppTable.propTypes = {\n  rows: PropTypes.array,\n  columns: PropTypes.array,\n};\n\nexport default AppTable;\n","import { useQuery } from 'react-query';\nimport { Box, Container, CircularProgress } from '@material-ui/core';\nimport { useState } from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport AppTextField from '../shared/AppTextField';\nimport AppTable from '../shared/AppTable';\n\nimport { getScores } from '../../utils/routeHandlers';\n\nconst columns = [\n  { label: 'Country Name', key: 'country' },\n  { label: 'Song Name', key: 'song' },\n  { label: 'Score', key: 'score' },\n];\n\nconst isScoresChanged = ({ oldScores, newScores }) =>\n  !_.isEqual(oldScores, newScores);\n\nconst AdminPage = ({ popUpNotification }) => {\n  const [rows, setRows] = useState([]);\n  const [userName, setUserName] = useState('');\n\n  const { data, isLoading, isSuccess, isError, error } = useQuery(\n    'songs',\n    getScores,\n    { refetchInterval: 1000 }\n  );\n\n  if (isSuccess && isScoresChanged({ oldScores: rows, newScores: data })) {\n    setRows(data);\n  }\n\n  if (isError) {\n    popUpNotification({\n      message: error.message || 'Failed to get songs',\n      severity: 'error',\n    });\n  }\n\n  return (\n    <Container>\n      <Box\n        flexDirection=\"column\"\n        m={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <AppTextField value={userName} setValue={setUserName} label=\"Name\" />\n        {isLoading && <CircularProgress />}\n        {isSuccess && userName === 'stoza' && (\n          <AppTable rows={rows} columns={columns} />\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nAdminPage.propTypes = {\n  popUpNotification: PropTypes.func,\n};\n\nexport default AdminPage;\n","import { QueryClient, QueryClientProvider } from 'react-query';\nimport MainPage from './components/MainPage';\nimport { Box } from '@material-ui/core';\nimport { HowToVote, Star } from '@material-ui/icons';\nimport { useEffect, useState } from 'react';\n\nimport Drawer from './components/shared/Drawer';\nimport AppSnackbar from './components/shared/AppSnackbar';\nimport FinalVoting from './components/voting/FinalVoting';\nimport AdminPage from './components/voting/AdminPage';\n\nconst queryClient = new QueryClient();\nconst pages = [\n  {\n    label: 'Stozot Voting',\n    page: FinalVoting,\n    key: 'voting',\n    icon: <HowToVote key=\"vote-icon\" />,\n  },\n  {\n    label: 'Admin page',\n    page: AdminPage,\n    key: 'admin',\n    icon: <Star key=\"admin-icon\" />,\n  },\n];\n\nexport default function App() {\n  const [notify, setNotify] = useState(false);\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const [page, setPage] = useState(null);\n\n  const popUpNotification = ({ message, severity }) => {\n    setMessage(message);\n    setSeverity(severity);\n    setNotify(true);\n  };\n\n  useEffect(() => {\n    if (page === null) {\n      setPage(<FinalVoting popUpNotification={popUpNotification} />);\n    }\n  }, [page]);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Box>\n        <Box>\n          <Drawer\n            pages={pages}\n            setPage={setPage}\n            popUpNotification={popUpNotification}\n          />\n        </Box>\n        <br />\n        <br />\n        <br />\n        <br />\n        <MainPage page={page} />\n        {notify && (\n          <AppSnackbar\n            message={message}\n            severity={severity}\n            setNotify={setNotify}\n          />\n        )}\n      </Box>\n    </QueryClientProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}