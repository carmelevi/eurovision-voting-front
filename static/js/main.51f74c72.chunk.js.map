{"version":3,"sources":["components/MainPage.js","components/shared/AppButton.js","components/shared/Drawer.js","components/shared/AppSnackbar.js","components/shared/AppSelect.js","components/shared/AppCard.js","components/voting/CountryVote.js","components/shared/AppTable.js","components/voting/WaitForVoting.js","components/voting/VotingPage.js","components/shared/AppListItem.js","components/shared/AppList.js","utils/routeHandlers.js","components/voting/FinalVoting.js","App.js","reportWebVitals.js","index.js"],"names":["MainPage","page","Box","id","display","m","useStyles","makeStyles","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","AppButton","handleSubmit","buttonName","classes","aligncontent","Button","className","variant","onClick","drawerWidth","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","title","buttons","PersistentDrawerLeft","openRoutesFuncs","routes","routesIcons","sectionName","pagesNames","openPage","useTheme","useState","open","setOpen","handleDrawerClose","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Menu","Typography","map","pageName","name","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Alert","props","elevation","marginTop","AppSnackbar","message","severity","setNotify","handleClose","event","reason","Snackbar","autoHideDuration","onClose","AppSelect","selectKey","addFinalScore","score","setScore","FormControl","fullWidth","style","minWidth","InputLabel","Select","labelId","value","onChange","key","addScoreToFinalScores","target","MenuItem","maxWidth","margin","backgroundColor","align","AppCard","children","Card","CountryVote","countryName","songName","imageUrl","popUpNotification","setVotingStatus","loading","setLoading","mediaStyles","useWideCardMediaStyles","a","preventDefault","error","Container","CardMedia","image","CircularProgress","table","firstPlace","secondPlace","thirdPlace","AppTable","rows","columns","getRowStyle","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","column","TableBody","row","scope","WaitForVoting","setRows","setTimeout","flexDirection","size","votingStatuses","VotingPage","votingStatus","setPage","useEffect","console","log","AppListItem","item","ListItemAvatar","Avatar","src","flag","country","secondary","sx","song","AppList","items","bgcolor","songsUrl","httpRequestBuilder","url","method","headers","body","fetch","JSON","stringify","res","ok","Error","sendScores","scores","getSongs","response","json","FinalVoting","songs","setSongs","setScores","validateScore","scoresCount","Object","values","reduce","acc","1","2","3","4","5","6","7","8","10","12","every","scoreCount","tempScores","init1","HowToVote","votingPagesNames","App","notify","setMessage","setSeverity","setSectionName","setPagesNames","routePages","vote","final","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51f74c72.chunk.js","sourcesContent":["import { Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst MainPage = ({ page }) => {\n  return (\n    <Box id=\"main_page\" display=\"block\" m={0}>\n      {page}\n    </Box>\n  );\n};\n\nMainPage.propTypes = {\n  page: PropTypes.element,\n};\n\nexport default MainPage;\n","import { Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\n// We can inject some CSS into the DOM.\nconst useStyles = makeStyles({\n  root: {\n    background: \"linear-gradient(45deg, #F7DC25 30%, #F9F959 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"black\",\n    height: 48,\n    padding: \"0 30px\",\n    boxShadow: \"0 3px 5px 2px rgba(206, 206, 19, .4)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n});\n\nconst AppButton = ({ handleSubmit, buttonName }) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <Button\n        className={classes.root}\n        variant=\"outlined\"\n        onClick={handleSubmit}\n      >\n        {buttonName}\n      </Button>\n    </Box>\n  );\n};\n\nAppButton.propTypes = {\n  handleSubmit: PropTypes.func,\n  buttonName: PropTypes.string,\n};\n\nexport default AppButton;\n","import { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  AppBar,\n  Box,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { ChevronLeft, ChevronRight, Menu } from '@material-ui/icons';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport AppButton from './AppButton';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    background: '#5900b3',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  buttons: { display: 'flex', aligncontent: 'center', m: '1' },\n}));\n\nexport default function PersistentDrawerLeft({\n  openRoutesFuncs,\n  routes,\n  routesIcons,\n  sectionName,\n  pagesNames,\n  openPage,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {sectionName}\n          </Typography>\n          <Box className={classes.buttons}>\n            {pagesNames.map((pageName) => (\n              <AppButton\n                key={pageName}\n                handleSubmit={() => openPage({ name: pageName })}\n                buttonName={pageName}\n              ></AppButton>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {routes.map((text, index) => (\n            <ListItem\n              button\n              key={text}\n              onClick={() => {\n                handleDrawerClose();\n                openRoutesFuncs[index]();\n              }}\n            >\n              <ListItemIcon>{routesIcons[index]}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </Box>\n  );\n}\n\nPersistentDrawerLeft.propTypes = {\n  openRoutesFuncs: PropTypes.array,\n  routes: PropTypes.array,\n  routesIcons: PropTypes.array,\n  pagesNames: PropTypes.array,\n  sectionName: PropTypes.string,\n  openPage: PropTypes.func,\n};\n","import MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AppSnackbar({ message, severity, setNotify }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setNotify(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nAppSnackbar.propTypes = {\n  message: PropTypes.string,\n  severity: PropTypes.string,\n  setNotify: PropTypes.func,\n};\n","import { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst AppSelect = ({ selectKey, addFinalScore }) => {\n  const [score, setScore] = useState('');\n\n  const addScoreToFinalScores = ({ value }) => {\n    setScore(value);\n    addFinalScore({ key: selectKey, score: value });\n  };\n\n  return (\n    <FormControl fullWidth style={{ minWidth: '100px' }}>\n      <InputLabel id=\"demo-simple-select-label\">Score</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={score}\n        label=\"Score\"\n        onChange={(event) =>\n          addScoreToFinalScores({ value: event.target.value })\n        }\n      >\n        <MenuItem value={'0'}>0</MenuItem>\n        <MenuItem value={'1'}>1</MenuItem>\n        <MenuItem value={'2'}>2</MenuItem>\n        <MenuItem value={'3'}>3</MenuItem>\n        <MenuItem value={'4'}>4</MenuItem>\n        <MenuItem value={'5'}>5</MenuItem>\n        <MenuItem value={'6'}>6</MenuItem>\n        <MenuItem value={'7'}>7</MenuItem>\n        <MenuItem value={'8'}>8</MenuItem>\n        <MenuItem value={'10'}>10</MenuItem>\n        <MenuItem value={'12'}>DOUZE POINTS</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nAppSelect.propTypes = {\n  addFinalScore: PropTypes.func,\n  selectKey: PropTypes.string,\n};\n\nexport default AppSelect;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Card } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 304,\n    margin: 'auto',\n    boxShadow: 'none',\n    padding: 24,\n    borderRadius: 20,\n    marginTop: 24,\n    backgroundColor: '#d9b3ff',\n    align: 'center',\n  },\n}));\n\nexport default function AppCard({ children }) {\n  const classes = useStyles();\n\n  return <Card className={classes.root}>{children}</Card>;\n}\n\nAppCard.propTypes = {\n  verified: PropTypes.bool,\n  children: PropTypes.any,\n};\n","import { Box, Container, CircularProgress, CardMedia } from '@material-ui/core';\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppSelect from '../shared/AppSelect';\nimport AppButton from '../shared/AppButton';\nimport AppCard from '../shared/AppCard';\n\n// import { submitScore } from '../../utils/routeHandlers';\n\nconst CountryVote = ({\n  countryName,\n  songName,\n  imageUrl,\n  popUpNotification,\n  setVotingStatus,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState('1');\n  const mediaStyles = useWideCardMediaStyles();\n\n  async function handleSubmitScore(event) {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      // const res = await submitScore({\n      //   score,\n      // });\n      popUpNotification({\n        message: 'Successfully submit score',\n        severity: 'success',\n      });\n      setVotingStatus('wait');\n    } catch (error) {\n      popUpNotification({ message: error.message, severity: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Container>\n      <AppCard>\n        <Box>\n          <CardMedia classes={mediaStyles} image={imageUrl} />\n          <h1>{countryName}</h1>\n          <h3>{songName}</h3>\n          <Box display=\"flex\" aligncontent=\"center\" m={1}>\n            <AppSelect score={score} setScore={setScore} />\n          </Box>\n        </Box>\n        <Box display=\"flex\" aligncontent=\"center\" m={1}>\n          <AppButton handleSubmit={handleSubmitScore} buttonName=\"Submit\" />\n          {loading && <CircularProgress />}\n        </Box>\n      </AppCard>\n    </Container>\n  );\n};\n\nCountryVote.propTypes = {\n  countryName: PropTypes.string,\n  songName: PropTypes.string,\n  imageUrl: PropTypes.string,\n  popUpNotification: PropTypes.func,\n  setVotingStatus: PropTypes.func,\n};\n\nexport default CountryVote;\n","import {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: '40px',\n    maxWidth: '60px',\n  },\n  firstPlace: { backgroundColor: '#F6EE07' },\n  secondPlace: { backgroundColor: '#D4D3CA' },\n  thirdPlace: { backgroundColor: '#ECA244' },\n});\n\nconst AppTable = ({ rows, columns }) => {\n  const classes = useStyles();\n\n  const getRowStyle = (index) => {\n    switch (index) {\n      case 0:\n        return classes.firstPlace;\n      case 1:\n        return classes.secondPlace;\n      case 2:\n        return classes.thirdPlace;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Box display=\"flex\" aligncontent=\"center\" m={1}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              {columns.map((column) => (\n                <TableCell key={column.key}>{column.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow className={getRowStyle(index)} key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((column) => (\n                  <TableCell key={`${column.key}-${index}`}>\n                    {row[column.key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nAppTable.propTypes = {\n  rows: PropTypes.array,\n  columns: PropTypes.array,\n};\n\nexport default AppTable;\n","import { Box, Container, CircularProgress } from '@material-ui/core';\nimport { useState } from 'react';\nimport AppTable from '../shared/AppTable';\n// import { getGetScore } from '../../utils/routeHandlers';\n\nconst columns = [\n  { label: 'Country Name', key: 'countryName' },\n  { label: 'Song Name', key: 'songName' },\n  { label: 'Score', key: 'score' },\n];\n\nconst WaitForVoting = () => {\n  const [rows, setRows] = useState([\n    { countryName: 'Israel', songName: 'I.M', score: 12 },\n    { countryName: 'Ukraine', songName: 'Stefania', score: 10 },\n    { countryName: 'bla bla bla', songName: 'bla bla bla', score: 8 },\n    { countryName: 'sho sho sho', songName: 'sho sho sho', score: 5 },\n  ]);\n\n  setTimeout(() => {\n    setRows([\n      { countryName: 'Israel', songName: 'I.M', score: 12 },\n      { countryName: 'Ukraine', songName: 'Stefania', score: 11 },\n      { countryName: 'bla bla bla', songName: 'bla bla bla', score: 8 },\n      { countryName: 'sho sho sho', songName: 'sho sho sho', score: 5 },\n      { countryName: 'la la la', songName: 'la la la', score: 3 },\n    ]);\n  }, 2000);\n\n  return (\n    <Container>\n      <Box\n        flexDirection=\"column\"\n        m={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <AppTable rows={rows} columns={columns} />\n        <center>\n          <h1>Please wait for the next voting session</h1>\n        </center>\n        <CircularProgress size=\"10rem\" />\n      </Box>\n    </Container>\n  );\n};\n\nexport default WaitForVoting;\n","import { Box } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CountryVote from './CountryVote';\nimport WaitForVoting from './WaitForVoting';\n\n// import { getCountryDetails } from '../../utils/routeHandlers';\n\nconst votingStatuses = { WAIT: 'wait', VOTE: 'vote', DONE: 'done' };\n\nconst VotingPage = ({ popUpNotification }) => {\n  const [votingStatus, setVotingStatus] = useState('wait');\n  const [page, setPage] = useState(null);\n\n  useEffect(() => {\n    console.log(votingStatus);\n    switch (votingStatus) {\n      case votingStatuses.VOTE:\n        // const { countryName, songName, imageUrl } = getCountryDetails();\n        setPage(\n          <CountryVote\n            countryName=\"Israel\"\n            songName=\"I.M\"\n            imageUrl=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Flag_of_Israel.svg/2560px-Flag_of_Israel.svg.png\"\n            popUpNotification={popUpNotification}\n            setVotingStatus={setVotingStatus}\n          />\n        );\n        break;\n      case votingStatuses.DONE:\n        setPage(<h1>done</h1>);\n        break;\n      case votingStatuses.WAIT:\n        setTimeout(() => {\n          setVotingStatus('vote');\n        }, 5000);\n        setPage(<WaitForVoting />);\n        break;\n      default:\n        popUpNotification({\n          message: `Wrong status (${votingStatus})`,\n          severity: 'error',\n        });\n        break;\n    }\n  }, [votingStatus, popUpNotification]);\n\n  return <Box m={0}>{page}</Box>;\n};\n\nVotingPage.propTypes = { popUpNotification: PropTypes.func };\n\nexport default VotingPage;\n","import * as React from 'react';\nimport {\n  Avatar,\n  Typography,\n  ListItemAvatar,\n  ListItemText,\n  ListItem,\n  Box,\n} from '@material-ui/core';\nimport AppSelect from './AppSelect';\nimport PropTypes from 'prop-types';\n\nexport default function AppListItem({ item, addFinalScore }) {\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <Avatar src={item.flag} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.country}\n        secondary={\n          <React.Fragment>\n            <Typography\n              sx={{ display: 'inline' }}\n              component=\"span\"\n              variant=\"body2\"\n            >\n              {item.song}\n            </Typography>\n          </React.Fragment>\n        }\n      />\n      <Box>\n        <AppSelect selectKey={item.key} addFinalScore={addFinalScore} />\n      </Box>\n    </ListItem>\n  );\n}\n\nAppListItem.propTypes = {\n  addFinalScore: PropTypes.func,\n  item: PropTypes.object,\n};\n","import { Box, Divider, List } from '@material-ui/core';\nimport AppListItem from './AppListItem';\nimport PropTypes from 'prop-types';\n\nexport default function AppList({ items, addFinalScore }) {\n  return (\n    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      {items.map((item, index) => (\n        <Box key={index}>\n          <AppListItem item={item} addFinalScore={addFinalScore} />\n          <Divider variant=\"inset\" component=\"li\" />\n        </Box>\n      ))}\n    </List>\n  );\n}\n\nAppList.propTypes = {\n  addFinalScore: PropTypes.func,\n  items: PropTypes.array,\n};\n","const songsUrl = 'https://36ca-77-124-6-115.eu.ngrok.io';\n\nasync function httpRequestBuilder({\n  url,\n  method = 'POST',\n  headers = { 'Content-Type': 'application/json' },\n  body,\n}) {\n  const res = await fetch(url, {\n    method,\n    headers,\n    body: body && JSON.stringify(body),\n  });\n\n  if (!res.ok) throw new Error(await res.text());\n\n  return res;\n}\n\nexport async function sendScores({ scores }) {\n  await httpRequestBuilder({\n    url: `${songsUrl}/api/v1/eurovision/daniel`,\n    method: 'POST',\n    body: scores,\n  });\n}\n\nexport async function getSongs() {\n  const response = await httpRequestBuilder({\n    url: `${songsUrl}/api/v1/eurovision/songs`,\n    method: 'GET',\n  });\n\n  return response.json();\n}\n","import { Container, CircularProgress, Box } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AppList from '../shared/AppList';\nimport AppButton from '../shared/AppButton';\n\nimport { getSongs, sendScores } from '../../utils/routeHandlers';\n\nconst FinalVoting = ({ popUpNotification }) => {\n  const [loading, setLoading] = useState(true);\n  const [songs, setSongs] = useState([]);\n  const [scores, setScores] = useState({});\n\n  function validateScore() {\n    const scoresCount = Object.values(scores).reduce(\n      (acc, score) => {\n        if (score !== '0') acc[score] = acc[score] + 1;\n        return acc;\n      },\n      {\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0,\n        5: 0,\n        6: 0,\n        7: 0,\n        8: 0,\n        10: 0,\n        12: 0,\n      }\n    );\n\n    return Object.values(scoresCount).every((scoreCount) => scoreCount === 1);\n  }\n\n  async function handleSubmitScores() {\n    setLoading(true);\n    try {\n      const isValid = validateScore();\n      if (isValid) {\n        await sendScores({ scores });\n        popUpNotification({\n          message: 'Successfully send scores',\n          severity: 'success',\n        });\n      } else {\n        popUpNotification({\n          message: 'Please make sure the scores are valid',\n          severity: 'error',\n        });\n      }\n    } catch (error) {\n      popUpNotification({ message: error.message, severity: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function addFinalScore({ key, score }) {\n    const tempScores = scores;\n    tempScores[key] = score;\n    setScores(tempScores);\n  }\n\n  useEffect(() => {\n    async function init1() {\n      try {\n        const res = await getSongs();\n        popUpNotification({\n          message: 'Successfully got songs',\n          severity: 'success',\n        });\n        setSongs(res);\n      } catch (error) {\n        popUpNotification({ message: error.message, severity: 'error' });\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    init1();\n  }, [popUpNotification]);\n\n  return (\n    <Container>\n      <Box>\n        {songs && <AppList items={songs} addFinalScore={addFinalScore} />}\n        {loading && <CircularProgress />}\n        <AppButton\n          key=\"submitScores\"\n          handleSubmit={handleSubmitScores}\n          buttonName=\"Submit Scores\"\n        ></AppButton>\n      </Box>\n    </Container>\n  );\n};\n\nFinalVoting.propTypes = {\n  popUpNotification: PropTypes.func,\n};\n\nexport default FinalVoting;\n","import MainPage from './components/MainPage';\nimport { Box } from '@material-ui/core';\nimport { HowToVote } from '@material-ui/icons';\nimport { useState } from 'react';\n\nimport Drawer from './components/shared/Drawer';\nimport AppSnackbar from './components/shared/AppSnackbar';\nimport VotingPage from './components/voting/VotingPage';\nimport FinalVoting from './components/voting/FinalVoting';\n\nconst routes = ['Voting'];\nconst routesIcons = [<HowToVote key=\"vote-icon\" />];\nconst votingPagesNames = ['vote', 'final'];\n\nexport default function App() {\n  const [notify, setNotify] = useState(false);\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('');\n  const [sectionName, setSectionName] = useState('Voting');\n  const [pagesNames, setPagesNames] = useState(votingPagesNames);\n  const [page, setPage] = useState(null);\n\n  const popUpNotification = ({ message, severity }) => {\n    setMessage(message);\n    setSeverity(severity);\n    setNotify(true);\n  };\n\n  const routePages = {\n    vote: <VotingPage popUpNotification={popUpNotification} />,\n    final: <FinalVoting popUpNotification={popUpNotification} />,\n  };\n\n  const openVotingRoutes = () => {\n    setSectionName('Voting');\n    setPagesNames(votingPagesNames);\n  };\n\n  const openPage = ({ name }) => {\n    setPage(routePages[name]);\n  };\n\n  const openRoutesFuncs = [openVotingRoutes];\n\n  return (\n    <Box>\n      <Box>\n        <Drawer\n          routes={routes}\n          routesIcons={routesIcons}\n          openRoutesFuncs={openRoutesFuncs}\n          sectionName={sectionName}\n          pagesNames={pagesNames}\n          openPage={openPage}\n          routePages={routePages}\n        />\n      </Box>\n      <br />\n      <br />\n      <br />\n      <br />\n      <MainPage page={page} />\n      {notify && (\n        <AppSnackbar\n          message={message}\n          severity={severity}\n          setNotify={setNotify}\n        />\n      )}\n    </Box>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}